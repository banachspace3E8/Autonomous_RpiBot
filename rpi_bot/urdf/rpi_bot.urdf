<!-- Shishir Khanal-->
<!-- 1/23/2025-->
<!-- Urdf to assemble robot-->


<robot name="rpi_bot">
    <link name="base_footprint" />
<!-- //////////////////////////////// Base Link /////////////////////////////////// -->
   <link name="base_link">
        <visual>
            <geometry>
                <mesh filename="package://rpi_bot/meshes/base.dae"/>
            </geometry>
        </visual>

        <collision>
        <geometry>
            <mesh filename="package://rpi_bot/meshes/base.dae"/>
        </geometry>
        </collision>

        <inertial>
            <mass value="10"/>
            <inertia ixx="0.4" ixy="0.0" ixz="0.0" iyy="0.4" iyz="0.0" izz="0.2"/>
        </inertial>
    </link>
    <joint name="base_joint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin rpy="0 0 0" xyz="0 0 0.14" />
    </joint>

<!-- //////////////////////////////// Caster Holder Link /////////////////////////////////// -->
   <link name="caster_holder_link">
        <visual>
            <geometry>
                <mesh filename="package://rpi_bot/meshes/caster_holder.dae"/>
            </geometry>
        </visual>

        <collision>
        <geometry>
            <mesh filename="package://rpi_bot/meshes/caster_holder.dae"/>
        </geometry>
        </collision>

        <inertial>
            <mass value="10"/>
            <inertia ixx="0.4" ixy="0.0" ixz="0.0" iyy="0.4" iyz="0.0" izz="0.2"/>
        </inertial>
    </link>
    <joint name="caster_holder_joint" type="fixed">
        <parent link="base_link" />
        <child link="caster_holder_link" />
        <origin rpy="0 0 0" xyz="0 -0.19 -0.015" />
    </joint>

<!-- //////////////////////////////// Caster Wheel Link /////////////////////////////////// -->
   <link name="caster_wheel_link">
        <visual>
            <geometry>
                <mesh filename="package://rpi_bot/meshes/caster_wheel.dae"/>
            </geometry>
        </visual>

        <collision>
        <geometry>
            <mesh filename="package://rpi_bot/meshes/caster_wheel.dae"/>
        </geometry>
        </collision>

        <inertial>
            <mass value="10"/>
            <inertia ixx="0.4" ixy="0.0" ixz="0.0" iyy="0.4" iyz="0.0" izz="0.2"/>
        </inertial>
    </link>
    <joint name="caster_wheel_joint" type="continuous">
        <axis xyz="1.0 0.0 0.0"/>
        <parent link="caster_holder_link" />
        <child link="caster_wheel_link" />
        <origin rpy="0 0 0" xyz="0 -0.003  -0.086" />
    </joint>

<!-- //////////////////////////////// Right Wheel Link /////////////////////////////////// -->
   <link name="right_wheel_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 3.14"/>
            <geometry>
                <mesh filename="package://rpi_bot/meshes/wheel.dae"/>
            </geometry>
        </visual>

        <collision>
        <geometry>
            <mesh filename="package://rpi_bot/meshes/wheel.dae"/>
        </geometry>
        </collision>

        <inertial>
            <mass value="10"/>
            <inertia ixx="0.001444223" iyy="0.00280875" izz="0.001444223" ixy="0.0" ixz="0.0" iyz="0.0" />
        </inertial>
    </link>
    <joint name="right_wheel_joint" type="continuous">
        <axis xyz="0.0 1.0 0.0" />
        <parent link="base_link" />
        <child link="right_wheel_link" />
        <origin rpy="0.0 0.0 -1.57" xyz="-0.232  0.14 -0.045" />
    </joint>

<!-- //////////////////////////////// Left Wheel Link /////////////////////////////////// -->
   <link name="left_wheel_link">
      <visual>
            <geometry>
                <mesh filename="package://rpi_bot/meshes/wheel.dae"/>
            </geometry>
        </visual>

        <collision>
        <geometry>
            <mesh filename="package://rpi_bot/meshes/wheel.dae"/>
        </geometry>
        </collision>

        <inertial>
            <mass value="10"/>
            <inertia ixx="0.001444223" iyy="0.00280875" izz="0.001444223" ixy="0.0" ixz="0.0" iyz="0.0" />
        </inertial>
    </link>
    <joint name="left_wheel_joint" type="continuous">
        <axis xyz="0.0 1.0 0.0" />
        <parent link="base_link" />
        <child link="left_wheel_link" />
        <origin rpy="0.0 0.0 -1.57" xyz="0.233  0.14 -0.045" />
    </joint>

<!-- //////////////////////////////// Camera Link /////////////////////////////////// -->
   <link name="camera_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 1.57"/>
            <geometry>
                <mesh filename="package://rpi_bot/meshes/rpi_camera.dae"/>
            </geometry>
        </visual>

        <collision>
        <geometry>
            <mesh filename="package://rpi_bot/meshes/rpi_camera.dae"/>
        </geometry>
        </collision>

        <inertial>
            <mass value="10"/>
            <inertia ixx="0.4" ixy="0.0" ixz="0.0" iyy="0.4" iyz="0.0" izz="0.2"/>
        </inertial>
    </link>
    <joint name="camera_joint" type="fixed">
        <parent link="base_link" />
        <child link="camera_link" />
        <origin rpy="0.0 0 -1.57" xyz="0 -0.18 0.2" />
    </joint>

<!-- //////////////////////////////// Cover Link /////////////////////////////////// -->
   <link name="cover_link">
        <visual>
            <geometry>
                <mesh filename="package://rpi_bot/meshes/cover.dae"/>
            </geometry>
        </visual>

        <collision>
        <geometry>
            <mesh filename="package://rpi_bot/meshes/cover.dae"/>
        </geometry>
        </collision>

        <inertial>
            <mass value="10"/>
            <inertia ixx="0.4" ixy="0.0" ixz="0.0" iyy="0.4" iyz="0.0" izz="0.2"/>
        </inertial>
    </link>
    <joint name="cover_joint" type="fixed">
        <parent link="base_link" />
        <child link="cover_link" />
        <origin rpy="0 0 0" xyz="0.0015  0 0.08" />
    </joint>

<!-- //////////////////////////////// Diff Drive /////////////////////////////////// -->
    <gazebo>
      <plugin filename="libgazebo_ros_diff_drive.so" name="vision_rpi_bot_controller">
        <odometry_frame>odom</odometry_frame>
        <commandTopic>cmd_vel</commandTopic>
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <update_rate>15.0</update_rate>
        <left_joint>left_wheel_joint</left_joint>
        <right_joint>right_wheel_joint</right_joint>
        <wheel_separation>0.47</wheel_separation>
        <wheel_diameter>0.2</wheel_diameter>
        <max_wheel_acceleration>2</max_wheel_acceleration>
        <robotBaseFrame>base_link</robotBaseFrame>

      </plugin>
    </gazebo>

<!-- //////////////////////////////// Camera Plugin /////////////////////////////////// -->
    <gazebo reference="camera_link">
    <sensor type="camera" name="rpi_bot_camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>480</width>
          <height>640</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="rpi_bot_camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <visualize>true</visualize>
        <updateRate>0.0</updateRate>
        <cameraName>VRB/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

<!-- //////////////////////////////// Lidar Plugin /////////////////////////////////// -->
    <gazebo reference="lidar_link">
    <sensor name="RB_lidar" type="ray">
        <visualize>true</visualize>
        <update_rate>15.0</update_rate>
        <plugin filename="libgazebo_ros_ray_sensor.so" name="lidar_plugin">
        <ros>
        <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
        </plugin>
        <ray>
        <scan>
            <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.00</min_angle>
            <max_angle>3.14</max_angle>
            </horizontal>
        </scan>
        <range>
            <min>0.01</min>
            <max>0.7</max>
            <resolution>0.015</resolution>
        </range>
        <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
        </noise>
        </ray>
    </sensor>
    </gazebo>

    <link name="lidar_link"/>

    <joint name="lidar_joint" type="fixed">
        <origin xyz="0 -0.25 0.1" rpy="0.0 0 -3.14" />
        <parent link="base_link" />
        <child link="lidar_link" />

    </joint>

 </robot>